import os

statinfo = os.stat(r"C:\Users\10900225\Documents\Witch\BTX\Workspaces\Library\SRC\fromSrc.txt")

print(f'StatInfo: {statinfo}')
print(f'Attributes')
print(f'st_mode: File mode: file type and file mode bits (permissions).')
print(f'st_mode: {statinfo.st_mode}.')
print(f'st_ino: Platform dependent, but if non-zero, unique identifies the file for a given value of st_dev. Typically: the inode number on Unix, the file index on Windows.')
print(f'st_ino: {statinfo.st_ino}.')
print(f'st_dev: Indentifier of the device on which this file resides.')
print(f'st_dev: {statinfo.st_dev}.')
print(f'st_nlink: Number of hard links.')
print(f'st_nlink: {statinfo.st_nlink}.')
print(f'st_uid: User identifier of the file owner.')
print(f'st_uid: {statinfo.st_uid}.')
print(f'st_gid: Group identifier of the file owner.')
print(f'st_gid: {statinfo.st_gid}.')
print(f'st_size: Size of the file in bytes, if it is a regular file or a symbolic link. The size of a symbolic link is the length of the pathname it contains, without a terminating null byte.')
print(f'st_size: {statinfo.st_size}.')
print(f'Timestamps')
print(f'st_atime: Time of most recent access expressed in seconds.')
print(f'st_atime: {statinfo.st_atime}.')
print(f'st_mtime: Time of most recent content modification expressed in seconds.')
print(f'st_mtime: {statinfo.st_mtime}.')
print(f'st_ctime: Platform dependent: the time of the most recent metadata change on Unix, the time of creation on Windows, expressed in seconds.')
print(f'st_ctime: {statinfo.st_ctime}.')
print(f'st_rsize: {statinfo.st_rsize}.')